apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: ec2-s3-composition
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XEC2S3Resource
  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      # S3 Bucket
      - name: s3-bucket
        base:
          apiVersion: s3.aws.upbound.io/v1beta1
          kind: Bucket
          spec:
            forProvider:
              region: "us-east-1"
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.bucketName
          toFieldPath: metadata.name

      # Security Group for web traffic
      - name: web-security-group
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: SecurityGroup
          spec:
            forProvider:
              description: "Security group for web application"
              ingress:
              - fromPort: 80
                toPort: 80
                protocol: "tcp"
                cidrBlocks: ["0.0.0.0/0"]
              - fromPort: 22
                toPort: 22
                protocol: "tcp"
                cidrBlocks: ["0.0.0.0/0"]
              egress:
              - fromPort: 0
                toPort: 0
                protocol: "-1"
                cidrBlocks: ["0.0.0.0/0"]
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
          - type: string
            string:
              fmt: "%s-web-sg"

      # EC2 Instance
      - name: ec2-instance
        base:
          apiVersion: ec2.aws.upbound.io/v1beta1
          kind: Instance
          spec:
            forProvider:
              instanceType: "t3.micro"
              ami: "ami-0023921b4fcd5382b" 
              region: "us-east-1"
              associatePublicIpAddress: true
              vpcSecurityGroupIdSelector:
                matchControllerRef: true
              userData: |
                #!/bin/bash
                yum update -y
                yum install -y docker
                systemctl start docker
                systemctl enable docker
                usermod -a -G docker ec2-user
                
                # Run HashiCorp demo container
                docker run -d \
                  --name web-app \
                  --restart unless-stopped \
                  -p 80:80 \
                  -e PORT=80 \
                  hashicorp/http-echo:latest \
                  -text="ðŸŽ‰ Hello from Crossplane + ArgoCD! 
                This EC2 instance was deployed automatically using GitOps.
                
                âœ… Managed by: Crossplane
                âœ… Deployed via: ArgoCD  
                âœ… Infrastructure as Code: SUCCESS!
                
                Instance provisioned in $(curl -s http://169.254.169.254/latest/meta-data/placement/region) region"
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.instanceType
          toFieldPath: spec.forProvider.instanceType
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.amiId
          toFieldPath: spec.forProvider.ami