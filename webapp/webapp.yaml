apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-with-s3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp-s3
  template:
    metadata:
      labels:
        app: webapp-s3
    spec:
      containers:
      - name: webapp
        image: hashicorp/http-echo
        args:
        - "-text=Version 1.0 - BLUE THEME with S3 connectivity"
        ports:
        - containerPort: 5678
        volumeMounts:
        - name: shared-data
          mountPath: /shared
      
      - name: s3-checker
        image: amazon/aws-cli:latest
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          export AWS_SHARED_CREDENTIALS_FILE=/aws-secret/creds
          
          echo "🔧 Configurando AWS CLI..."
          echo "📁 Credenciales en: $AWS_SHARED_CREDENTIALS_FILE"
          
          # Verificar que el archivo existe
          if [ -f "$AWS_SHARED_CREDENTIALS_FILE" ]; then
            echo "✅ Archivo de credenciales encontrado"
          else
            echo "❌ Archivo de credenciales no encontrado"
            exit 1
          fi
          
          while true; do
            echo "⏰ $(date): Verificando conexión S3..."
            
            if aws s3 ls > /shared/s3-status.txt 2>&1; then
              echo "✅ CONECTADO - $(date)" > /shared/s3-connection.txt
              echo "Buckets disponibles:" >> /shared/s3-connection.txt
              aws s3 ls >> /shared/s3-connection.txt
            else
              echo "❌ ERROR - $(date)" > /shared/s3-connection.txt
              echo "No se pudo conectar a S3" >> /shared/s3-connection.txt
              echo "Error details:" >> /shared/s3-connection.txt
              cat /shared/s3-status.txt >> /shared/s3-connection.txt
            fi
            
            echo "Durmiendo 60 segundos..."
            sleep 60
          done
        env:
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        - name: aws-credentials
          mountPath: /aws-secret
          readOnly: true
      
      volumes:
      - name: shared-data
        emptyDir: {}
      - name: aws-credentials
        secret:
          secretName: aws-secret
          defaultMode: 0400
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  type: NodePort
  selector:
    app: webapp-s3
  ports:
  - port: 80
    targetPort: 5678
